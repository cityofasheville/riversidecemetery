<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html">

<css lib="datatables" />
<js lib="jquery" />
<js lib="datatables" />

<title>Alternative pagination</title>
<js><![CDATA[
$(document).ready(function() {
	$('#example').dataTable( {
		"paginationType": "full_numbers"
	} );
} );
]]></js>

<info>
	<p>The page controls which are used by default in DataTables (forward and backward buttons only) are great for most situations, but there are cases where you may wish to customise the controls presented to the end user. This is made simple by DataTables through its extensible pagination mechanism. There are two types of pagination controls built into DataTables: <value>two_button</value> (default) and <value>full_numbers</value>. To switch between these two types, use the <init>paginationType</init> initialisation parameter. You can add additional types of pagination control by extending the <code>$.fn.dataTableExt.oPagination</code> object.</p>

	<p>The example below shows the <value>full_numbers</value> type of pagination, where 'first', 'previous', 'next' and 'last' buttons are presented, as well as the five pages around the current page.</p>
</info>

</dt-example>
